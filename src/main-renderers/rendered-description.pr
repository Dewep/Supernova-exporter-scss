{*
Injectable blueprint that represents token description

Source data: Token Metadata and Payload, all types (https://developers.supernova.io/design-system-data/tokens)
Note: Token is passed as `context` property because it is injected

{
  "context": {
    "id": string
    "name": string
    "description": string
    "tokenType": Depends on the token type
    "origin": ItemOrigin | null
    "value": Depends on the token type
  }
}


Rendered as:

/* description */
 *}
{[ let themeId = "a78c211e-c104-43c2-98dc-7216a8624f0f" /]}
{[ let themedToken = ds.tokensByApplyingThemes([context.id], [themeId]) /]}
{[ let theme = ds.themeById(themeId) /]}
/*
{{ debugjson(context) }}
{* debugkeys(theme) id,versionedId,brandId,designSystemVersionId,name,description,codeName,createdAt,updatedAt,overriddenTokens *}
{* themedToken: id,versionedId,brandId,themeId,designSystemVersionId,name,description,tokenType,origin,parent,createdAt,updatedAt,sortOrder,properties,propertyValues,value,shadowLayers,isVirtual *}
{{ debugjson(themedToken) }}
{[ if (context.description && context.description.count() > 0) ]}
/* {{ context.description.replacing("*/", "* /") }} */
{[/]}
